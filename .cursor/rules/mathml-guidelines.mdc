---
description: Cursor AI guidelines for this repo
alwaysApply: true
---

# MathML Guidelines Project - Cursor Rules

## Project Overview

This is a Markdown-based documentation site for Nordic MathML Guidelines, featuring:

- Markdown-based content with MathML examples

## File Structure & Conventions

### Core Files

- `Nordic MathML Guidelines.md` - Source markdown content
- `images/` - Documentation images and examples

## Coding Standards

### Bash Scripts

- Use `set -e` for error handling
- Quote variables properly
- Use `mktemp` for temporary files
- Include proper error messages and status reporting
- Check for command availability before use

### Markdown Content

- Include MathML namespace: `xmlns="http://www.w3.org/1998/Math/MathML"`
- Preserve existing MathML examples in documentation
- Use code blocks for HTML and MathML examples
- Maintain accessibility standards for mathematical content

## MathML Guidelines

### Accessibility

- Ensure all MathML includes proper namespace
- Use semantic MathML elements (`<mi>`, `<mo>`, `<mn>`, etc.)
- Maintain proper structure for screen readers
- Include text alternatives where appropriate

## Development Workflow

### GitHub Actions

- Automated Markdown Linting on pushes and PRs
- Python 3.9 environment

## Error Handling

### Python Scripts

- Validate input file existence
- Handle encoding errors gracefully
- Provide clear error messages
- Exit with appropriate status codes
- Log conversion statistics

### Bash Scripts

- Validate file operations
- Clean up temporary files
- Provide fallback processing when possible

## Security & Best Practices

### File Operations

- Use temporary files with proper cleanup
- Validate file paths and permissions
- Handle large files efficiently
- Avoid shell injection vulnerabilities

### Content Processing

- Preserve original content structure
- Validate MathML syntax
- Sanitize user input in conversions
- Maintain content integrity

## Documentation Standards

### Code Comments

- Explain complex regex patterns
- Document conversion logic
- Include usage examples
- Note edge cases and limitations

### Markdown Content

- Use clear, descriptive headings
- Include practical MathML examples
- Provide conversion guidelines
- Maintain consistent formatting

## Performance Considerations

### Conversion Efficiency

- Use compiled regex patterns
- Minimize file I/O operations
- Process content in chunks for large files
- Cache repeated operations where possible

## Maintenance

### Regular Tasks

- Review and update conversion patterns
- Update documentation examples

### Monitoring

- Monitor conversion accuracy
- Validate MathML output
- Review user feedback and issues

## Tools & Dependencies

### Required Tools

- Bash shell with standard utilities
- Git for version control

## Quality Assurance

### Code Quality

- Follow language-specific style guides
- Include comprehensive error handling
- Write maintainable, readable code
- Document complex algorithms

### Content Quality

- Validate MathML syntax
- Ensure accessibility compliance
- Maintain documentation consistency

## Troubleshooting

### Common Issues

- MathML namespace missing
- File encoding problems

### Debugging

- Use verbose output in scripts
- Check file permissions and paths
- Validate input file format
